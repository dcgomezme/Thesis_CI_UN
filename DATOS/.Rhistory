die <- 1:sides
dice <- sample(die, num_of_dice, replace = TRUE,
prob = c(1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 3/10, 1/10))
sum(dice)
rolls <- replicate(max_rolls, roll())
qplot(rolls, binwidth = 1)
}
roll(50000, 8, 3)
roll <- function(max_rolls, sides, num_of_dice) {
die <- 1:sides
dice <- sample(die, num_of_dice, replace = TRUE,
prob = c(1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 3/10, 1/10))
sum(dice)
rolls <- replicate(max_rolls, roll())
qplot(rolls, binwidth = 1)
}
roll(50000, 8, 3)
roll <- function(max_rolls, sides, num_of_dice) {
die <- 1:sides
dice <- sample(die, num_of_dice, replace = TRUE,
prob = c(1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 3/10, 1/10))
sum(dice)
rolls <- replicate(max_rolls, roll())
qplot(rolls, binwidth = 1)
}
roll(50000, 8, 3)
library(ggplot2)
roll <- function(max_rolls, sides, num_of_dice) {
die <- 1:sides
dice <- sample(die, num_of_dice, replace = TRUE,
prob = c(1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 3/10, 1/10))
sum(dice)
rolls <- replicate(max_rolls, roll())
qplot(rolls, binwidth = 1)
}
roll(50000, 8, 3)
library(ggplot2)
roll <- function(max_rolls, sides, num_of_dice) {
die <- 1:sides
dice <- sample(die, num_of_dice, replace = TRUE,
prob = c(1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 3/10, 1/10))
sum(dice)
rolls <- replicate(max_rolls, roll())
qplot(rolls, binwidth = 1)
}
#roll(50000, 8, 3)
roll(5,5,5)
roll(50000,5,5)
roll(50000,8,5)
library(ggplot2)
roll <- function(max_rolls, sides = 8, num_of_dice) {
die <- 1:sides
dice <- sample(die, num_of_dice, replace = TRUE,
prob = c(1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 3/10, 1/10))
sum(dice)
rolls <- replicate(max_rolls, roll())
qplot(rolls, binwidth = 1)
}
#roll(50000, 8, 3)
library(ggplot2)
roll <- function(max_rolls, sides = 8, num_of_dice) {
die <- 1:sides
dice <- sample(die, num_of_dice, replace = TRUE,
prob = c(1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 3/10, 1/10))
sum(dice)
rolls <- replicate(max_rolls, roll())
qplot(rolls, binwidth = 1)
}
roll(50000, 8, 3)
library(ggplot2)
roll <- function(max_rolls = 50000, sides = 8, num_of_dice) {
die <- 1:sides
dice <- sample(die, num_of_dice, replace = TRUE,
prob = c(1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 3/10, 1/10))
sum(dice)
rolls <- replicate(max_rolls, roll())
qplot(rolls, binwidth = 1)
}
roll(50000, 8, 3)
library(ggplot2)
roll <- function(max_rolls = 50000, sides = 8, num_of_dice) {
die <- 1:sides
dice <- sample(die, num_of_dice, replace = TRUE,
prob = c(1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 3/10, 1/10))
sum(dice)
}
rolls <- replicate(max_rolls, roll())
library(ggplot2)
roll <- function(sides = 8, num_of_dice) {
die <- 1:sides
dice <- sample(die, num_of_dice, replace = TRUE,
prob = c(1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 3/10, 1/10))
sum(dice)
}
rolls <- replicate(max_rolls = 50000, roll())
library(ggplot2)
roll <- function(sides = 8, num_of_dice) {
die <- 1:sides
dice <- sample(die, size = num_of_dice, replace = TRUE,
prob = c(1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 3/10, 1/10))
sum(dice)
}
rolls <- replicate(max_rolls = 50000, roll())
library(ggplot2)
roll <- function(sides = 8, num_of_dice) {
die <- 1:sides
dice <- sample(die, size = num_of_dice, replace = TRUE,
prob = c(1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 3/10, 1/10))
sum(dice)
}
rolls <- replicate(50000, roll())
qplot(rolls, binwidth = 1)
roll(50000, 8, 3)
library(ggplot2)
roll <- function(sides = 8, num_of_dice) {
die <- 1:sides
dice <- sample(die, size = num_of_dice, replace = TRUE,
prob = c(1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 3/10, 1/10))
sum(dice)
}
rolls <- replicate(50000, roll())
qplot(rolls, binwidth = 1)
library(ggplot2)
roll <- function(max_rolls = 50000, sides = 8, num_of_dice = 3) {
die <- 1:sides
dice <- sample(die, size = num_of_dice, replace = TRUE,
prob = c(1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 3/10, 1/10))
sum(dice)
rolls <- replicate(50000, roll())
qplot(rolls, binwidth = 1)
}
library(ggplot2)
roll <- function(max_rolls = 50000, sides = 8, num_of_dice = 3) {
die <- 1:sides
dice <- sample(die, size = num_of_dice, replace = TRUE,
prob = c(1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 3/10, 1/10))
sum(dice)
rolls <- replicate(50000, roll())
qplot(rolls, binwidth = 1)
}
roll()
library(ggplot2)
roll <- function(sides = 8, num_of_dice = 3) {
die <- 1:sides
dice <- sample(die, size = num_of_dice, replace = TRUE,
prob = c(1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 3/10, 1/10))
sum(dice)
}
rolls <- replicate(50000, roll())
qplot(rolls, binwidth = 1)
rescale01 <- function(x) {
if (is.numeric(x) != TRUE) {
return("inputs must all be numeric")
}
else {
rng <- range(x, na.rm = TRUE, finite = TRUE)
(x - rng[1]) / (rng[2] - rng[1])
x[x == Inf] <- 1
x[x == -Inf] <- 0
x
}
}
rescale01(c("a", -Inf, 0:7, NA))
rescale01(c(Inf, -Inf, 0:7, NA))
?stopifnot
both_na <- function(x, y) {
stopifnot("vectors must be the same length" = length(x) == length(y))
which(is.na(x) & is.na(y))
}
both_na(c(5, 3, NA, 4, NA), c(1, 2, NA, 4, NA))
both_na <- function(x, y) {
stopifnot("vectors must be the same length" = length(x) == length(y))
which(is.na(x) & is.na(y))
}
both_na(c(5, 3, NA, 4, NA, 5), c(1, 2, NA, 4, NA))
both_na <- function(x, y) {
stopifnot("vectors must be the same length" = length(x) == length(y))
which(is.na(x) & is.na(y))
}
#testing an error
both_na(c(5, 3, NA, 4, NA, 5), c(1, 2, NA, 4, NA))
#normal testing
both_na(c(5, 3, NA, 4, NA), c(1, 2, NA, 4, NA))
library(ggplot2)
roll <- function(sides, num_of_dice) {
die <- 1:sides
dice <- sample(die, size = num_of_dice, replace = TRUE,
prob = c(1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 3/10, 1/10))
sum(dice)
}
rolls <- replicate(50000, roll(8,3))
qplot(rolls, binwidth = 1)
?geom_density()
?geom_density
?mpg
install.packages("mpg")
mpg
str(mpg)
library(datasets)
mpg
str(mpg)
data("mpg", package = "datasets")
?mpg
library(tidyverse)
?mpg
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(datasets)
## RUN TO VIEW THE GRAPH YOU WILL NEED TO REPRODUCE
knitr::include_graphics("images/question-2.png")
## RUN TO VIEW THE GRAPH YOU WILL NEED TO REPRODUCE
knitr::include_graphics("images/question-1.png")
ggplot(data = mpg, mapping = aes(x = displ, y = hwy))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point() + geom_line()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x,3), se = FALSE)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(method = lm, formula = y ~ splines::bs(x,3), se = FALSE)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(method = loess, formula = y ~ x, se = FALSE)
ggplot(mpg, aes(displ, hwy, colour = drv)) +
geom_point() +
geom_smooth(method = loess, formula = y ~ x, se = FALSE)
ggplot(mpg, aes(displ, hwy, colour = drv)) +
geom_point() +
geom_smooth(data = filter(mpg, drv == "f"), method = loess,
formula = y ~ x, se = FALSE)
ggplot(mpg, aes(displ, hwy, colour = drv)) +
geom_point() +
geom_smooth(data = filter(mpg, drv == ""), method = loess,
formula = y ~ x, se = FALSE)
ggplot(mpg, aes(displ, hwy, colour = drv)) +
geom_point() +
geom_smooth(data = filter(mpg, drv == "4"), method = loess,
formula = y ~ x, se = FALSE)
ggplot(mpg, aes(displ, hwy, colour = drv)) +
geom_point() +
geom_smooth(data = filter(mpg, drv == "r"), method = loess,
formula = y ~ x, se = FALSE)
ggplot(mpg, aes(displ, hwy, colour = drv)) +
geom_point() +
geom_smooth(data = filter(mpg, drv), method = loess,
formula = y ~ x, se = FALSE)
ggplot(mpg, aes(displ, hwy, colour = drv)) +
geom_point() +
geom_smooth(data = filter(mpg, drv == ""), method = loess,
formula = y ~ x, se = FALSE)
ggplot(mpg, aes(displ, hwy, colour = drv)) +
geom_point() +
geom_smooth(data = NULL, method = loess,
formula = y ~ x, se = FALSE)
ggplot(mpg, aes(displ, hwy, colour = drv)) +
geom_point() +
geom_smooth(data = filter(mpg, drv = "4, f, r"), method = loess,
formula = y ~ x, se = FALSE)
ggplot(mpg, aes(displ, hwy, colour = drv)) +
geom_point() +
geom_smooth(data = filter(mpg, drv == "4, f, r"), method = loess,
formula = y ~ x, se = FALSE)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = drv)) +
geom_smooth(method = loess, formula = y ~ x, se = FALSE)
## RUN TO VIEW THE GRAPH YOU WILL NEED TO REPRODUCE
knitr::include_graphics("images/question-3.png")
ggplot(mpg, aes(displ, hwy, colour = drv)) +
geom_point() +
geom_smooth(method = loess, formula = y ~ x, se = FALSE)
?geom_smooth
ggplot(mpg, aes(displ, hwy, colour = drv)) +
geom_point() +
geom_smooth(aes(linetype = drv), method = loess, formula = y ~ x, se = FALSE)
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
geom_smooth(aes(linetype = drv), method = loess, formula = y ~ x, se = FALSE)
ggplot(mpg, aes(displ, hwy)) +
geom_point(colour = drv) +
geom_smooth(aes(linetype = drv), method = loess, formula = y ~ x, se = FALSE)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = drv)) +
geom_smooth(aes(linetype = drv), method = loess, formula = y ~ x, se = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(datasets)
## RUN TO VIEW THE GRAPH YOU WILL NEED TO REPRODUCE
knitr::include_graphics("images/question-4.png")
ggplot(mpg, aes(cty, hwy)) + geom_point(aes(colour = class),
position = "jitter")
## RUN TO VIEW THE GRAPH YOU WILL NEED TO REPRODUCE
knitr::include_graphics("images/question-5.png")
ggplot(mpg, aes(x = hwy, y = cyl)) +
geom_point(shape = 17, size = 2, colour = "orange") +
facet_wrap(~class, nrow = 3)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
hflights
head(hflights)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(hflights)
?hflights
??hflights
install.packages("hflights")
head(hflights)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(hflights)
head(hflights)
lut <- c("A" = "carrier", "B" = "weather", "C" = "FFA",
"D" = "security", "E" = "not cancelled")
hflights$CancellationCode <- lut[hflights$CancellationCode]
lut <- c("A" = "carrier", "B" = "weather", "C" = "FFA",
"D" = "security", "E" = "not cancelled")
hflights$CancellationCode <- lut[hflights$CancellationCode]
tail(hflights$Code[!is.na(hflights$Code)], n = 20)
lut <- c("A" = "carrier", "B" = "weather", "C" = "FFA",
"D" = "security", "E" = "not cancelled")
rm(list = ls())
hflights
lut <- c("A" = "carrier", "B" = "weather", "C" = "FFA",
"D" = "security", "E" = "not cancelled")
hflights %>% mutate(Code)
lut <- c("A" = "carrier", "B" = "weather", "C" = "FFA",
"D" = "security", "E" = "not cancelled")
hflights %>% mutate(Code = "")
lut <- c("A" = "carrier", "B" = "weather", "C" = "FFA",
"D" = "security", "E" = "not cancelled")
hflights %>% mutate(Code = "")
hflights %>% mutate(Code = lut)
lut <- c("A" = "carrier", "B" = "weather", "C" = "FFA",
"D" = "security", "E" = "not cancelled")
hflights %>% mutate(Code = "")
hflights$Code <- lut[hflights$Code]
lut <- c("A" = "carrier", "B" = "weather", "C" = "FFA",
"D" = "security", "E" = "not cancelled")
rm(list = ls())
hflights %>% mutate(Code = c("A" = "carrier", "B" = "weather", "C" = "FFA",
"D" = "security", "E" = "not cancelled"))
hflights
#hflights %>% mutate(Code = c("A" = "carrier", "B" = "weather", "C" = "FFA",
#                            "D" = "security", "E" = "not cancelled"))
hflights <- hflights %>% mutate(Code = c("A" = "carrier", "B" = "weather",
"C" = "FFA", "D" = "security",
"E" = "not cancelled"))
glimpse(hflights)
lut <- c("A" = "carrier", "B" = "weather", "C" = "FFA",
"D" = "security", "E" = "not cancelled"))
lut <- c("A" = "carrier", "B" = "weather", "C" = "FFA",
"D" = "security", "E" = "not cancelled")
hflights$Code <- lut[hflights$CancellationCode]
lut <- c("A" = "carrier", "B" = "weather", "C" = "FFA",
"D" = "security", "E" = "not cancelled")
hflights$Code <- lut[hflights$CancellationCode]
tail(hflights$Code[!is.na(hflights$Code)]
lut <- c("A" = "carrier", "B" = "weather", "C" = "FFA",
"D" = "security", "E" = "not cancelled")
hflights$Code <- lut[hflights$CancellationCode]
tail(hflights$Code[!is.na(hflights$Code)])
lut <- c("A" = "carrier", "B" = "weather", "C" = "FFA",
"D" = "security", "E" = "not cancelled")
hflights$Code <- lut[hflights$CancellationCode]
tail(hflights$Code[!is.na(hflights$Code)])
glimpse(hflights)
install.packages("nycflights13")
nycflights13
library(nycflights13)
nycflights13::flights
knitr::opts_chunk$set(echo = TRUE)
library(nycflights13)
library(tidyverse)
nycflights13::flights
nycflights13::flights %>% between(month, 7, 9)
filter(flights, between(month, 7, 9))
flights %>% filter() %>% between(month, 7, 9)
flights %>% filter(between(month, 7, 9))
flights
head(flights)
flights$air_time
flights %>%
arrange(air_time) %>%
select(carrier, flight, air_time)
flights %>%
arrange(-air_time) %>%
select(carrier, flight, air_time)
#Fastest
flights %>% arrange(-air_time) %>% select(carrier, flight, air_time) %>% head(.,10)
knitr::opts_chunk$set(echo = TRUE)
library(nycflights13)
library(tidyverse)
flights %>% mutate(hr_delay = dep_delay / 60) %>%
arrange(desc(dep_delay))
flights %>% mutate(hr_delay = dep_delay / 60) %>%
arrange(desc(hr_delay))
flights %>% mutate(hr_delay = dep_delay / 60, .before = dep_time) %>%
arrange(desc(hr_delay))
flights %>% mutate(hr_delay = dep_delay / 60, .before = dep_time) %>%
arrange(desc(dep_delay))
flights %>% mutate(hr_delay = dep_delay / 60, .before = dep_time) %>%
arrange(desc(hr_delay))
flights
head(flights)
names(flights)
flights %>% filter(flight > 2000) %>%
select(dest, year, month, day, carrier)
daily <- flights %>% group_by(dest, year, month, day, carrier)
per_day <- summarize(daily, numflights = n())
per_day %>% filter(numflights > 2000)
#flights %>% filter(flight > 2000) %>%
#  select(dest, year, month, day, carrier)
daily <- flights %>% group_by(dest, year, month, day, carrier)
per_day <- summarize(daily, numflights = n())
# %>% filter(numflights > 2000)
#flights %>% filter(flight > 2000) %>%
#  select(dest, year, month, day, carrier)
daily <- flights %>% group_by(dest, year, month, day, carrier)
per_day <- summarize(daily, numflights = n())
per_day
# %>% filter(numflights > 2000)
#flights %>% filter(flight > 2000) %>%
#  select(dest, year, month, day, carrier)
daily <- group_by(flights, dest, year, month, day, carrier)
per_day <- summarize(daily, numflights = n())
per_day
# %>% filter(numflights > 2000)
#flights %>% filter(flight > 2000) %>%
#  select(dest, year, month, day, carrier)
flights %>% filter(flight > 2000) %>%
select(dest, year, month, day, carrier)
daily <- group_by(flights, year, month, day)
(per_day <- summarize(daily, numflights=n() ))
(per_month <- summarize(per_day, numflights=n() ))
(per_year <- summarize(per_month, numflights = n() ))
per_year %>% mutate(percent_late = (dep_delay/60)/(air_time/60)) %>%
select(per_year, flight, origin, dest, carrier, numflights)
knitr::opts_chunk$set(echo = TRUE)
library(nycflights13)
library(tidyverse)
daily <- group_by(flights, year, month, day)
(per_day <- summarize(daily, numflights=n() ))
#(per_month <- summarize(per_day, numflights=n() ))
#(per_year <- summarize(per_month, numflights = n() ))
per_year %>% mutate(percent_late = (dep_delay/60)/(air_time/60)) %>%
select(per_year, flight, origin, dest, carrier, numflights)
daily <- group_by(flights, year, month, day)
(per_day <- summarize(daily, numflights=n() ))
#(per_month <- summarize(per_day, numflights=n() ))
#(per_year <- summarize(per_month, numflights = n() ))
per_day %>% mutate(percent_late = (dep_delay/60)/(air_time/60)) %>%
select(per_year, flight, origin, dest, carrier, numflights)
daily <- group_by(flights, year, month, day)
(per_day <- summarize(daily, numflights=n() ))
#(per_month <- summarize(per_day, numflights=n() ))
#(per_year <- summarize(per_month, numflights = n() ))
per_day %>% mutate(percent_late = (dep_delay/60)/(air_time/60)) %>%
select(per_day, flight, origin, dest, carrier, numflights)
install.packages("openxlsx")
library(readxl) #Allows to read xls or xlsx files
library(openxlsx)
library(xts)
install.packages("xts")
library(xts)
setwd("C:/Users/David Gomez/Desktop/TESIS/DATOS")
data_ppt <- read.xlsx("DatosIDW_221205", "PTPM_CON")
data_ppt <- read.xlsx("DatosIDW_221205.xlsx", "PTPM_CON")
data_ppt <- as.xts(data_ppt[ , -1],
order.by = as.Date(data_ppt[ , 1],
format = "%Y-%m-%d"))
agg <- function(x) {
if (sum(is.na(x)) >= 0.25 * length(x)) {
return(NA)
}
else {
return(sum(x, na.rm = TRUE))
}
}
data_ppt <- as.xts(data_ppt[ , -1],
order.by = as.Date(data_ppt[ , 1],
format = "%Y-%m-%d"))
data_ppt <- as.xts(data_ppt[ , -1],
order.by = as.Date(data_ppt[ , 1],
format = "%Y-%m-%d"))
library(readxl) #Allows to read xls or xlsx files
library(openxlsx)
library(xts)
library(data.table)
library(tidytable)
library(lubridate)
library(tidyverse)
data_ppt <- as.xts(data_ppt[ , -1],
order.by = as.Date(data_ppt[ , 1],
format = "%Y-%m-%d"))
library(xts)
data_ppt <- as.xts(data_ppt[ , -1],
order.by = as.Date(data_ppt[ , 1],
format = "%Y-%m-%d"))
data_ppt <- read.xlsx("DatosIDW_221205.xlsx", "PTPM_CON")
data_ppt <- as.xts(data_ppt[ , -1],
order.by = as.Date(data_ppt[ , 1],
format = "%Y-%m-%d"))
data_y_ppt <- aggregate(data_ppt, by = year(index(data_ppt)), agg) %>%
data.frame()
View(data_y_ppt)
